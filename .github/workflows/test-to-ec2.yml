name: TEST create ec2 instance

on:
  push:
    branches:
      - master

jobs:
  test:
    env:
      image_id: "ami-0084a47cc718c111a"
      key_name: "KEY.pem"
      security_group: "sg-0a39b9996ec6042dc"
      subnet: "subnet-0c13d15f18758d199"
      type: "t2.micro"


    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
     
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2                         # default
          verbose: false                     # default
          arch: amd64                        # allowed values: amd64, arm64

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: eu-central-1  # Укажрегион, или передайте его через секреты

      - name: Create EC2
        run: |
          aws ec2 run-instances --image-id ${{ env.image_id }} --count 1 --instance-type ${{ env.type }} --key-name ${{ env.key_name }} --security-group-ids ${{ env.security_group }} --subnet-id ${{ env.subnet }}

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Pull and start containers
        run: |
          cd /home/runner/work/Monitoring/Monitoring && docker-compose pull && docker-compose up -d


